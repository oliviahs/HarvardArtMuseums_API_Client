:py:mod:`harvardartmuseums_pkg.harvardartmuseums_pkg`
=====================================================

.. py:module:: harvardartmuseums_pkg.harvardartmuseums_pkg


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   harvardartmuseums_pkg.harvardartmuseums_pkg.get_url_for_title
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_title_classification
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_url_for_artist
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_artist
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_request_for_artworks
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_artworks
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_url_for_exhibition
   harvardartmuseums_pkg.harvardartmuseums_pkg.get_exhibitions



.. py:function:: get_url_for_title(text, apikey)

   This function writes a url(a string) for Harvard Art Museums API to get a dataset with all artwork titles that include a word chosen.

   :param text: A string that you wish to find in the titles of artwork
   :type text: str
   :param apikey: A string of your apikey, given by Harvard Art Museums;
                  https://harvardartmuseums.org/collections/api
   :type apikey: str

   :returns: A url to put into the get_title_classification() function, which will give you the dataset.
   :rtype: str

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> text = "cat"
   >>> apikey = "yourapikey"
   >>> harvardartmuseums_pkg.get_url_for_title(text, apikey)
   'https://api.harvardartmuseums.org/object?title=cat&apikey=yourapikey'


.. py:function:: get_title_classification(url)

   Generates dataset of all artwork titles and their classifications that include a word chosen.

   :param url: A string of url, generated by get_url_for_title(text, apikey) function.
   :type url: string

   :returns: The dataset of all artwork titles that include a word chosen and their classifications.
   :rtype: A dataframe

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> harvardartmuseums_pkg.get_title_classification('https://api.harvardartmuseums.org/object?title=cat&apikey=yourapikey')
   Output will be a pandas dataframe with two columns(title, classification).


.. py:function:: get_url_for_artist(country, gender, apikey)

   This function writes a url(a string) for Harvard Art Museums API to get a dataset with all female or male artists who are from a country(culture).

   :param country: A string that you wish to find in the culture of artists
   :type country: str
   :param gender: A string that you wish to find in the gender of artists
   :type gender: str
   :param apikey: A string of your apikey, given by Harvard Art Museums;
                  https://harvardartmuseums.org/collections/api
   :type apikey: str

   :returns: A url to put into the get_artist() function, which will give you the dataset.
   :rtype: str

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> country='Dutch'
   >>> gender='male'
   >>> apikey = "yourapikey"
   >>> harvardartmuseums_pkg.get_url_for_artist(country, gender, apikey)
   'https://api.harvardartmuseums.org/person?apikey=yourapikey&q=culture%3ADutch%2C%20gender%3Amale'


.. py:function:: get_artist(url)

   Generates dataset of all female or male artists who are from a country(culture).

   :param url: A string of url, generated by get_url_for_artist(country, gender, apikey) function.
   :type url: string

   :returns: The dataset of all female or male artists who are from a country(culture).
   :rtype: A dataframe

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> harvardartmuseums_pkg.get_artist('https://api.harvardartmuseums.org/person?apikey=d7a856a1-f4df-4726-958f-957b2762b17f&q=culture%3ADutch%2C%20gender%3Amale')
   Output will be a pandas dataframe with all the artists' information, such as gender, displayname, url, objectcount, birthplace, datebegin, dateend, culture, personid, deathplace.


.. py:function:: get_request_for_artworks(artist_name, apikey)

   This function generates a request for Harvard Art Museums API to get a dataset with all artworks of an artists you choose.

   :param artist_name: A string of an artist name to get his/her artworks
   :type artist_name: str
   :param apikey: A string of your apikey, given by Harvard Art Museums;
                  https://harvardartmuseums.org/collections/api
   :type apikey: str

   :returns: A response to put into the get_artworks() function, which will give you the dataset.
   :rtype: urllib3.response.HTTPResponse

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> artist_name='Claude Monet'
   >>> apikey = "yourapikey"
   >>> harvardartmuseums_pkg.get_request_for_artworks(artist_name, apikey)
   <urllib3.response.HTTPResponse at 0x7fb5eb62e3d0>


.. py:function:: get_artworks(request)

   Generates dataset of all artworks of an artist.

   :param request: A response, created by get_request_for_artworks(artist_name, apikey) function.
   :type request: urllib3.response.HTTPResponse

   :returns: The dataset of all list of artworks of the artist with information, such as displayname, id, url, culture.
   :rtype: A dataframe

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> harvardartmuseums_pkg.get_artworks(your_request)
   Output will be a pandas dataframe with all list of artworks of the artist with information, such as displayname, id, url, culture.


.. py:function:: get_url_for_exhibition(after, before, apikey)

   This function writes a url(a string) for Harvard Art Museums API to get a dataset with all exhibitions information, held in the selected years.

   :param after: A string of a starting year of a period when exhibitions were held
   :type after: str
   :param before: A string of an ending year of a period when exhibitions were held
   :type before: str
   :param apikey: A string of your apikey, given by Harvard Art Museums;
                  https://harvardartmuseums.org/collections/api
   :type apikey: str

   :returns: A url to put into the get_exhibitions() function, which will give you the dataset.
   :rtype: str

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> after = '1975'
   >>> before = '2005'
   >>> apikey = "yourapikey"
   >>> harvardartmuseums_pkg.get_url_for_exhibition(after, before, apikey)
   'https://api.harvardartmuseums.org/exhibition?after=1975&before=2005&apikey=yourapikey'


.. py:function:: get_exhibitions(url)

   Generates dataset of all exhibitions that were held in the selected period through get_url_for_exhibition(after, before, apikey) function.

   :param url: A string of url, generated by get_url_for_exhibition(after, before, apikey) function.
   :type url: string

   :returns: The dataset of all exhibitions that were held in the selected period.
   :rtype: A dataframe

   .. rubric:: Examples

   >>> from harvardartmuseums_pkg import harvardartmuseums_pkg
   >>> harvardartmuseums_pkg.get_exhibitions('https://api.harvardartmuseums.org/exhibition?after=1975&before=2005&apikey=yourapikey')
   Output will be a pandas dataframe with all the exhibitions' information, such as begindate, enddate, title, url, exhibitionid.


